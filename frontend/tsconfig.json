{
  "compilerOptions": {
    /* Base Options */
    "target": "ES2017", // Target modern JavaScript environments
    "lib": ["dom", "dom.iterable", "esnext"], // Include standard browser and modern JS features
    "allowJs": true, // Allow JavaScript files to be compiled
    "skipLibCheck": true, // Skip type checking of declaration files (speeds up build)
    "strict": false, // Enable all strict type-checking options (recommended)
    "forceConsistentCasingInFileNames": true, // Disallow inconsistently-cased references to the same file.
    "noEmit": true, // Do not emit output (Next.js handles compilation)
    "esModuleInterop": true, // Enables emit interoperability between CommonJS and ES Modules
    "module": "esnext", // Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'.
    "moduleResolution": "bundler", // Use modern module resolution strategy (works well with Next.js/Webpack/Turbopack)
    "resolveJsonModule": true, // Allow importing .json files
    "isolatedModules": true, // Transpile each file as a separate module (required for some build tools)
    "jsx": "preserve", // Preserve JSX to be handled by Next.js/React
    "incremental": true, // Enable incremental compilation
    "noUnusedLocals": false, // Handled by ESLint (@typescript-eslint/no-unused-vars)
    "noUnusedParameters": false, // Handled by ESLint (@typescript-eslint/no-unused-vars)

    /* Path Aliases */
    "baseUrl": ".", // Base directory for path aliases
    "paths": {
      "@/*": ["./src/*"] // Map '@/' to the 'src/' directory
    },

    /* Next.js specific */
    "plugins": [
      {
        "name": "next"
      }
    ],
    "strictNullChecks": true // Part of "strict", but can be explicit if needed
  },
  // Files included in the compilation
  "include": [
    "next-env.d.ts", // Next.js environment types
    "**/*.ts", // All TypeScript files
    "**/*.tsx", // All TSX files
    ".next/types/**/*.ts" // Types generated by Next.js (e.g., for App Router)
  ],
  // Files excluded from compilation
  "exclude": ["node_modules"]
}
